//https://www.acmicpc.net/problem/2178
#include <iostream>
#include <vector>
#include <queue>
using namespace std;
int N, M;

bool isRange(int y, int x)
{

	return (y >= 0 && y < N && x >= 0 && x < M);
}
int main()
{
	 cin >> N >> M;
	int endX = M - 1, endY = N - 1;
	vector<vector<char>> MAP(N, vector<char>(M));
	vector<vector<int>> dis(N, vector<int>(M, 123456));
	for (int i = 0; i < N; ++i) {
		for (int j = 0; j < M; ++j) {
			cin >> MAP[i][j];
		}
	}


	priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>>, less<pair<int, pair<int, int>>>> pq;

	dis[0][0] = 0;
	pq.push({ 0, {0,0} });

	int dx[] = { 0,0,-1,1 };
	int dy[] = { -1,1,0,0 };

	while (pq.empty() == false)
	{
		int curX = pq.top().second.second;
		int curY = pq.top().second.first;
		int curW = pq.top().first;
		pq.pop();
		if (dis[curY][curX] < curW)continue;
		for (int i = 0; i < 4; ++i) {
			int nextX = curX + dx[i];
			int nextY = curY + dy[i];
			if (isRange(nextY, nextX)==true&&MAP[nextY][nextX]=='1') {
				int nextW = curW + 1;
				if (dis[nextY][nextX] > nextW) {
					dis[nextY][nextX] = nextW;
					pq.push({ nextW,{nextY,nextX} });
				}
			}
		}

	}

	cout << dis[N - 1][M - 1]+1;

}