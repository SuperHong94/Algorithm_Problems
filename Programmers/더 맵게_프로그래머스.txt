//https://school.programmers.co.kr/learn/courses/30/lessons/42626#
//내꺼 정답
#include <string>
#include <vector>
#include <queue>
using namespace std;

int solution(vector<int> scoville, int K) {
    int answer = 0;
    priority_queue<int,vector<int>,greater<int>> pq(scoville.begin(),scoville.end());
    while(pq.size()>=2){
        int f=pq.top();pq.pop();
        int s=pq.top();pq.pop();
        if(f>=K)
            break;
        answer++;
        pq.push(f+s*2);
    }
    if(pq.size()==1&&pq.top()<K)
        return -1;
    return answer;
}

//강사님 정답
#include <string>
#include <vector>
#include <queue>
using namespace std;

int solution(vector<int> scoville, int K) {
    int answer = 0;
    priority_queue<int,vector<int>,greater<int>> q(scoville.begin(),scoville.end());
    
    while(1){
        int min1=q.top();q.pop();
        if(min1>=K)break;
        else if(q.empty()){
            answer=-1;
            break;
        }
        int min2=q.top();q.pop();
        q.push(min1+2*min2);
        answer++;
    }
    
    return answer;
}